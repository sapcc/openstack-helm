kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: barbican-api
  labels:
    system: openstack
    type: api
    component: barbican
spec:
  replicas: {{ .Values.pod.replicas.api }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_surge }}
    {{ end }}
  selector:
    matchLabels:
      name: barbican-api
  template:
    metadata:
      labels:
        name: barbican-api
      annotations:
        configmap-bin-hash: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: barbican-api
          image: {{.Values.global.image_repository}}/{{.Values.global.image_namespace}}/ubuntu-source-barbican-api:{{.Values.image_version_barbican}}
          imagePullPolicy: IfNotPresent
          command:
            - kubernetes-entrypoint
          env:
            - name: COMMAND
              value: "/barbican/bin/barbican-api"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_SERVICE
              value: "postgres-barbican,rabbitmq"
          livenessProbe:
            httpGet:
              path: /
              port: {{.Values.global.barbican_api_port_internal}}
            initialDelaySeconds: 15
            timeoutSeconds: 5
          ports:
            - name: barbican-api
              containerPort: {{.Values.global.barbican_api_port_internal}}
          volumeMounts:
            - name: etcbarbican
              mountPath: /etc/barbican
            - name: barbican-etc
              mountPath: /etc/barbican/barbican.conf
              subPath: barbican.conf
              readOnly: true
            - name: barbican-etc
              mountPath: /etc/barbican/barbican-api-paste.ini
              subPath: barbican-api-paste.ini
              readOnly: true
            - name: barbican-etc
              mountPath: /etc/barbican/policy.json
              subPath: policy.json
              readOnly: true
            - name: barbican-etc
              mountPath: /etc/barbican/logging.conf
              subPath: logging.conf
              readOnly: true
            - mountPath: /barbican-patches
              name: barbican-patches
              readOnly: true
      volumes:
        - name: etcbarbican
          emptyDir: {}
        - name: barbican-etc
          configMap:
            name: barbican-etc
        - name: barbican-patches
          configMap:
            name: barbican-patches
