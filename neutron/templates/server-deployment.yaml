kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: neutron-server
  labels:
    system: openstack
    type: api
    component: neutron
spec:
  replicas: {{ .Values.pod.replicas.api }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_surge }}
    {{ end }}
  selector:
    matchLabels:
      name: neutron-server
  template:
    metadata:
      labels:
        name: neutron-server
      annotations:
        checksum/neutron-etc: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: neutron-server
          image: {{.Values.global.image_repository}}/{{.Values.global.image_namespace}}/ubuntu-source-neutron-server-m3:{{.Values.image_version_neutron_server_m3}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /
              port: {{.Values.global.neutron_api_port_internal}}
            initialDelaySeconds: 120
            timeoutSeconds: 5
          command:
            - /usr/local/bin/kubernetes-entrypoint
          env:
            - name: COMMAND
              value: "/container.init/neutron-server-start"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_JOBS
              value: "neutron-migration"
            - name: DEPENDENCY_SERVICE
              value: "postgres-neutron,rabbitmq"
            - name: DEBUG_CONTAINER
              value: "false"
            - name: STATSD_HOST
              value: "localhost"
            - name: STATSD_PORT
              value: "9125"
            - name: STATSD_PREFIX
              value: "openstack"
            - name: SENTRY_DSN
              value: {{.Values.sentry_dsn | quote}}
          ports:
            - name: neutron-api
              containerPort: {{.Values.global.neutron_api_port_internal}}
          volumeMounts:
            - mountPath: /development
              name: development
            - mountPath: /neutron-etc
              name: neutron-etc
            - mountPath: /neutron-etc-vendor
              name: neutron-etc-vendor
            - mountPath: /neutron-etc-region
              name: neutron-etc-region
            - mountPath: /neutron-patches
              name: neutron-patches
            - mountPath: /cisco-patches
              name: cisco-patches
            - mountPath: /container.init
              name: container-init
        - name: statsd
          image: prom/statsd-exporter
          imagePullPolicy: IfNotPresent
          ports:
            - name: statsd
              containerPort: 9125
              protocol: UDP
            - name: metrics
              containerPort: {{.Values.port_metrics}}
      volumes:
        - name: neutron-etc
          configMap:
            name: neutron-etc
        - name: neutron-etc-vendor
          configMap:
            name: neutron-etc-vendor
        - name: neutron-etc-region
          configMap:
            name: neutron-etc-region
        - name: neutron-patches
          configMap:
            name: neutron-patches
        - name: cisco-patches
          configMap:
            name: cisco-patches
        - name: development
          persistentVolumeClaim:
            claimName: development-pvclaim
        - name: container-init
          configMap:
            name: neutron-bin
            defaultMode: 0755
