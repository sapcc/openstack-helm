# Default values for neutron.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value
global:
  image_namespace: REQUIRED
  image_repository: REQUIRED
  neutron_api_port_admin: '9696'
  neutron_api_port_internal: '9696'
  neutron_api_port_public: '443'
  default_mtu: '9050'

  hypervisors_vmware: []

  network_agents:
    - name: DEFINED-IN-REGION-CHART
      node: DEFINED-IN-REGION-CHART

debug: "True"

db_name: neutron
db_user: neutron
db_password: DEFINED-IN-REGION-CHART

port_metrics: '9102'

sentry_dsn: DEFINE-IN-REGION-CHART

image_version_neutron_server_m3: DEFINED-IN-REGION-CHART
image_version_neutron_dhcp_agent: DEFINED-IN-REGION-CHART
image_version_neutron_metadata_agent: DEFINED-IN-REGION-CHART
image_version_neutron_l3_agent: DEFINED-IN-REGION-CHART
image_version_neutron_openvswitch_agent: DEFINED-IN-REGION-CHART
image_version_neutron_vswitchdb: DEFINED-IN-REGION-CHART
image_version_neutron_vswitchd: DEFINED-IN-REGION-CHART

logging:
    formatters:
        context:
            class: oslo_log.formatters.ContextFormatter
        default:
            format: "%(message)s"
    handlers:
        stdout:
            class: StreamHandler
            args: "(sys.stdout,)"
            formatter: context
        "null":
            class: logging.NullHandler
            formatter: default
            args: "()"
        sentry:
            class: "raven.handlers.logging.SentryHandler"
            level: ERROR
            args: "()"
    loggers:
        root:
            handlers: "null"
            level: WARNING
        neutron:
            handlers: stdout, sentry
            level: WARNING
        neutron_lbaas:
            handlers: stdout, sentry
            level: WARNING
        amqp:
            handlers: stdout, sentry
            level: WARNING
        amqplib:
            handlers: stdout, sentry
            level: WARNING
        sqlalchemy:
            handlers: stdout, sentry
            level: WARNING
        boto:
            handlers: stdout, sentry
            level: WARNING
        suds:
            handlers: stdout, sentry
            level: INFO
        eventlet.wsgi.server:
            handlers: stdout, sentry
            level: INFO


postgres:
  name: neutron
  metrics:
    enabled: true
    customMetrics:
      openstack_neutron_networks_count:
        query: "SELECT COUNT(*) AS gauge, status FROM networks GROUP BY networks.status"
        metrics:
          - status:
              usage: "LABEL"
              description: "Network Status"
          - gauge:
              usage: "GAUGE"
              description: "Networks Count"
      openstack_neutron_routers_count:
        query: "SELECT COUNT(*) AS gauge, status FROM routers GROUP BY routers.status"
        metrics:
          - status:
              usage: "LABEL"
              description: "Router Status"
          - gauge:
              usage: "GAUGE"
              description: "Router Count"
      openstack_neutron_loadbalancer_count:
        query: "SELECT COUNT(*) AS gauge, operating_status FROM lbaas_loadbalancers GROUP BY operating_status"
        metrics:
          - operating_status:
              usage: "LABEL"
              description: "lbaas Status"
          - gauge:
              usage: "GAUGE"
              description: "lbaas Count"
      openstack_neutron_externalIP_status:
        query: "SELECT floating_network_id, COUNT(*) AS gauge, status FROM floatingips GROUP BY status, floating_network_id;"
        metrics:
          - floating_network_id:
              usage: "LABEL"
              description: "Floating Network ID"
          - status:
              usage: "LABEL"
              description: "Floating IP Status per Network"
          - gauge:
              usage: "GAUGE"
              description: "Count of Floating IP wrt status"
