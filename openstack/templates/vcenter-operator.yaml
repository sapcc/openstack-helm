{{- if .Values.vcenter_operator.image_version }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: vcenter-operator
  namespace: {{ .Values.global.admin_namespace }}
data:
  namespace: monsoon3
  user_suffix: {{ .Values.global.user_suffix | default "" | quote }}
  password: {{ .Values.global.master_password | quote }}
  cinder_agent_image: {{ .Values.global.image_repository }}/{{ .Values.global.image_namespace }}/ubuntu-source-cinder-volume:{{ .Values.cinder.image_version_cinder_volume }}
  cinder_sentry_dsn: {{ .Values.cinder.sentry_dsn | quote }}
  neutron_agent_image: {{ .Values.global.image_repository }}/{{ .Values.global.image_namespace }}/ubuntu-source-neutron-server-m3:{{ .Values.neutron.image_version_neutron_server_m3 }}
  neutron_sentry_dsn: {{ .Values.neutron.sentry_dsn | quote  }}
  nova_agent_image: {{ .Values.global.image_repository}}/{{ .Values.global.image_namespace}}/ubuntu-source-nova-compute:{{ .Values.nova.image_version_nova_compute }}
  nova_sentry_dsn: {{ .Values.nova.sentry_dsn | quote }}
  nova_service_user: {{  .Values.global.nova_service_user }}
  vcenter_nanny_image: {{ .Values.global.image_repository}}/{{ .Values.global.image_namespace}}/vcenter-nanny:{{ .Values.vcenter_operator.image_version_vcenter_nanny }}
{{- range $key, $value := .Values.vcenter_operator }}
  {{$key}}: {{ toJson $value }}
{{- end }}
{{ (.Files.Glob "vcenter-operator/*").AsConfig | indent 2 }}
---
kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: vcenter-operator
  namespace: {{ .Values.global.admin_namespace }}
  labels:
    component: operator
spec:
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  selector:
    matchLabels:
      name: vcenter-operator
  template:
    metadata:
      labels:
        name: vcenter-operator
      annotations:
        checksum/templates: {{ (.Files.Glob "vcenter-operator/*").AsConfig | sha256sum }}
    spec:
      restartPolicy: Always
      containers:
        - name: "vcenter-operator"
          command:
            - dumb-init
          args:
            - vcenter-operator
          image: "{{ .Values.global.image_repository}}/{{ .Values.global.image_namespace}}/ubuntu-source-vcenter-operator:{{ .Values.vcenter_operator.image_version}}"
          volumeMounts:
            - name: config
              mountPath: /var/lib/kolla/config_files
      volumes:
        - name: config
          configMap:
            name: vcenter-operator
{{- end }}
