{{- if .Values.image_version_ironic_api -}}
kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: ironic-api
  labels:
    system: openstack
    type: api
    component: ironic
spec:
  replicas: {{ .Values.pod.replicas.api }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_surge }}
    {{ end }}
  selector:
    matchLabels:
      name: ironic-api
  template:
    metadata:
      labels:
        name: ironic-api
    spec:
      containers:
        - name: ironic-api
          image: {{.Values.global.image_repository}}/{{.Values.global.image_namespace}}/ubuntu-source-ironic-api:{{.Values.image_version_ironic_api}}
          imagePullPolicy: IfNotPresent
          command:
            - kubernetes-entrypoint
          env:
            - name: COMMAND
              value: "ironic-api"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_SERVICE
              value: "postgres-ironic,rabbitmq"
          livenessProbe:
            httpGet:
              path: /
              port: {{.Values.global.ironic_api_port_internal}}
            initialDelaySeconds: 15
            timeoutSeconds: 5
          ports:
            - name: ironic-api
              containerPort: {{.Values.global.ironic_api_port_internal}}
          volumeMounts:
            - mountPath: /etc/ironic
              name: etcironic
            - mountPath: /etc/ironic/ironic.conf
              name: ironic-etc
              subPath: ironic.conf
              readOnly: true
            - mountPath: /etc/ironic/policy.json
              name: ironic-etc
              subPath: policy.json
              readOnly: true
            - mountPath: /etc/ironic/pxe_config.template
              name: ironic-etc
              subPath: pxe_config.template
              readOnly: true
            - mountPath: /etc/ironic/rootwrap.conf
              name: ironic-etc
              subPath: rootwrap.conf
              readOnly: true
            - mountPath: /etc/ironic/logging.conf
              name: ironic-etc
              subPath: logging.conf
              readOnly: true
      volumes:
        - name: etcironic
          emptyDir: {}
        - name: ironic-etc
          configMap:
            name: ironic-etc
            defaultMode: 0444
{{ end -}}
