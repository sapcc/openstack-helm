kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: ironic-conductor
  labels:
    system: openstack
    type: backend
    component: ironic
spec:
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 3
  selector:
    matchLabels:
      name: ironic-conductor
  template:
    metadata:
      labels:
        name: ironic-conductor
    spec:
      containers:
        - name: ironic-conductor
          image: {{.Values.global.image_repository}}/{{.Values.global.image_namespace}}/ubuntu-source-ironic-conductor:{{.Values.image_version_ironic_conductor}}
          imagePullPolicy: IfNotPresent
          env:
            - name: COMMAND
              value: "ironic-conductor"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_SERVICE
              value: "ironic-api,rabbitmq"
          volumeMounts:
            - mountPath: /var/lib/kolla/config_files
              name: ironic-etc
            - mountPath: /tftpboot
              name: ironic-tftp
        - name: ironic-pxe
          image: {{.Values.global.image_repository}}/{{.Values.global.image_namespace}}/ubuntu-source-ironic-pxe:{{.Values.image_version_ironic_pxe}}
          imagePullPolicy: IfNotPresent
          env:
            - name: COMMAND
              value: "ptftpd -v -d /tftpmap.py:handle eth0 /tftpboot"
          ports:
            - name: ironic-pxe
              protocol: UDP
              containerPort: {{.Values.global.ironic_pxe_port_public}}
          volumeMounts:
            - mountPath: /var/lib/kolla/config_files
              name: ironic-etc
            - mountPath: /tftpboot
              name: ironic-tftp
      volumes:
        - name: ironic-etc
          configMap:
            name: ironic-etc
        - name: ironic-tftp
          persistentVolumeClaim:
            claimName: ironic-tftp-pvclaim
