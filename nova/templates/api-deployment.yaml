kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: nova-api
  labels:
    system: openstack
    type: api
    component: nova
spec:
  replicas: 2
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 3
  selector:
    matchLabels:
      name: nova-api
  template:
    metadata:
      labels:
        name: nova-api
      annotations:
        checksum/nova-etc: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
        checksum/nova-bin: {{ include (print $.Template.BasePath "/bin-configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: nova-api
          image: {{.Values.global.image_repository}}/{{.Values.global.image_namespace}}/ubuntu-source-nova-api:{{.Values.image_version_nova_api}}
          imagePullPolicy: IfNotPresent
          command:
            - kubernetes-entrypoint
          env:
            - name: COMMAND
              value: "nova-api"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_JOBS
              value: "nova-migration"
            - name: DEPENDENCY_SERVICE
              value: "postgres-nova,rabbitmq"
            - name: STATSD_HOST
              value: "localhost"
            - name: STATSD_PORT
              value: "9125"
            - name: SENTRY_DSN
              value: {{.Values.sentry_dsn | quote}}
          livenessProbe:
            httpGet:
              path: /
              port: {{.Values.global.nova_api_port_internal}}
            initialDelaySeconds: 15
            timeoutSeconds: 5
          ports:
            - name: nova-api
              containerPort: {{.Values.global.nova_api_port_internal}}
            - name: nova-metdata
              containerPort: {{.Values.global.nova_metadata_port_internal}}
          volumeMounts:
            - mountPath: /etc/nova
              name: etcnova
            - mountPath: /etc/nova/nova.conf
              name: nova-etc
              subPath: nova.conf
              readOnly: true
            - mountPath: /etc/nova/api-paste.ini
              name: nova-etc
              subPath: api-paste.ini
              readOnly: true
            - mountPath: /etc/nova/api_audit_map.conf
              name: nova-etc
              subPath: api_audit_map.conf
              readOnly: true
            - mountPath: /etc/nova/policy.json
              name: nova-etc
              subPath: policy.json
              readOnly: true
            - mountPath: /etc/nova/logging.conf
              name: nova-etc
              subPath: logging.conf
              readOnly: true
            - mountPath: /var/lib/kolla/venv/bin/iptables-restore
              name: nova-bin
              subPath: iptables-restore.mock
              readOnly: true
        - name: statsd
          image: prom/statsd-exporter
          imagePullPolicy: IfNotPresent
          ports:
            - name: statsd
              containerPort: 9125
              protocol: UDP
            - name: metrics
              containerPort: {{.Values.port_metrics}}
      volumes:
        - name: etcnova
          emptyDir: {}
        - name: nova-etc
          configMap:
            name: nova-etc
        - name: nova-bin
          configMap:
            name: nova-bin
            defaultMode: 0755

