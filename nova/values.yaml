# Default values for nova.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value
global:
  image_namespace: DEFINED-IN-REGION-CHART
  image_repository: DEFINED-IN-REGION-CHART
  nova_api_port_admin: '8774'
  nova_api_port_internal: '8774'
  nova_api_port_public: '443'
  nova_metadata_port_internal: '8775'
  nova_console_port_public: '443'
  nova_novnc_port_internal: '6080'
  nova_spicehtml5_port_internal: '6082'
  nova_serial_port_internal: '6083'

  hypervisors: []
  hypervisors_vmware: []
  hypervisors_kvm: []
  hypervisors_ironic: []
  osprofiler: {}

osprofiler: {}

pod:
  replicas:
    api: 2
    console: 1
    conductor: 1
    scheduler: 1
  lifecycle:
    upgrades:
      deployments:
        revision_history: 5
        pod_replacement_strategy: RollingUpdate
        rolling_update:
           max_unavailable: 0
           max_surge: 1
  debug:
    api: false

jobs:
  purge_deleted_instances:
    cron: # "0 * * * *"
    older_than: 5
    max_number: 100

debug: "True"

db_name: nova
db_user: nova
db_password: DEFINED-IN-REGION-CHART

api_db_name: nova_api
api_db_user: nova_api
api_db_password: DEFINED-IN-REGION-CHART

port_metrics: '9102'

sentry_dsn: DEFINE_IN_REGION_CHART

#TODO we need to move to global or find another way to share image versions
image_version_neutron_server_m3: DEFINED-IN-REGION-CHART
image_version_neutron_openvswitch_agent:  DEFINED-IN-REGION-CHART
image_version_neutron_vswitchd:  DEFINED-IN-REGION-CHART
image_version_neutron_vswitchdb: DEFINED-IN-REGION-CHART

image_version_nova_api: DEFINED-IN-REGION-CHART
image_version_nova_compute: DEFINED-IN-REGION-CHART
image_version_nova_libvirt: DEFINED-IN-REGION-CHART
image_version_nova_conductor: DEFINED-IN-REGION-CHART
image_version_nova_consoleauth: DEFINED-IN-REGION-CHART
image_version_nova_novncproxy: DEFINED-IN-REGION-CHART
image_version_nova_spicehtml5proxy: DEFINED-IN-REGION-CHART
image_version_nova_scheduler: DEFINED-IN-REGION-CHART

cross_az_attach: 'False'

scheduler:
  default_filters: AvailabilityZoneFilter, AggregateInstanceExtraSpecsFilter, RamFilter, DiskFilter, ComputeFilter, ComputeCapabilitiesFilter, ImagePropertiesFilter, ServerGroupAntiAffinityFilter, ServerGroupAffinityFilter

pg_metrics:
  name: nova
  db_name: nova
  db_user: nova
  db_password: DEFINED-IN-REGION-CHART
  customMetrics:
    openstack_compute_nodes:
      query: "SELECT compute_nodes.host, aggregate_metadata.value AS availability_zone, compute_nodes.hypervisor_type, compute_nodes.free_disk_gb AS free_disk_gb_gauge, compute_nodes.local_gb AS local_gb_gauge, compute_nodes.local_gb_used AS local_gb_used_gauge, compute_nodes.free_ram_mb AS free_ram_mb_gauge, compute_nodes.memory_mb AS memory_mb_gauge, compute_nodes.memory_mb_used AS memory_mb_used_gauge, compute_nodes.vcpus_used AS vcpus_used_gauge, compute_nodes.vcpus AS vcpus_gauge, compute_nodes.running_vms AS running_vms_gauge from compute_nodes join aggregate_hosts on compute_nodes.host=aggregate_hosts.host join aggregate_metadata on aggregate_hosts.aggregate_id=aggregate_metadata.aggregate_id WHERE compute_nodes.deleted = 0"
      metrics:
        - availability_zone:
            usage: "LABEL"
            description: "Availability Zone details from aggregate_metadata table"
        - host:
            usage: "LABEL"
            description: "Name of the host"
        - hypervisor_type:
            usage: "LABEL"
            description: "Type of the hypervisor"
        - free_disk_gb_gauge:
            usage: "GAUGE"
            description: "Total free disk space in GB"
        - local_gb_gauge:
            usage: "GAUGE"
            description: "Total local disk size in GB"
        - local_gb_used_gauge:
            usage: "GAUGE"
            description: "Total used local disk size in GB"
        - free_ram_mb_gauge:
            usage: "GAUGE"
            description: "Free RAM in MiB"
        - memory_mb_gauge:
            usage: "GAUGE"
            description: "Total RAM in MiB"
        - memory_mb_used_gauge:
            usage: "GAUGE"
            description: "Total Used RAM in MiB"
        - vcpus_used_gauge:
            usage: "GAUGE"
            description: "vCPUs used"
        - vcpus_gauge:
            usage: "GAUGE"
            description: "Total vCPUs"
        - running_vms_gauge:
            usage: "GAUGE"
            description: "Number of VMs running"
    openstack_compute_instances:
      query: "SELECT coalesce(instances.host,'N/A'), instances.project_id, COUNT(*) AS gauge, instances.vm_state, instance_types.name FROM instances JOIN instance_types ON instances.instance_type_id=instance_types.id GROUP BY instances.vm_state, instances.host, instances.project_id, instance_types.name"
      metrics:
        - project_id:
            usage: "LABEL"
            description: "Project ID"
        - vm_state:
            usage: "LABEL"
            description: "State of the VM"
        - host:
            usage: "LABEL"
            description: "Host Name"
        - name:
            usage: "LABEL"
            description: "Flavor Name of Instance"            
        - gauge:
            usage: "GAUGE"
            description: "VM Count"
    openstack_compute_stuck_instances:
      query: "SELECT coalesce(host, 'N/A') AS host, project_id, availability_zone, vm_state, COUNT(*) FILTER (WHERE updated_at < now() - interval '15 minutes') AS count_gauge, MAX(EXTRACT(epoch FROM now() - updated_at)) AS max_duration_gauge FROM instances WHERE vm_state IN ('scheduling','pausing','unpausing','suspending','resuming','rescuing','unrescuing','rebuilding','migrating','deleting','restoring','shelving','unshelving','building','deleting','stopping','starting','spawning','rebooting') AND deleted=0 GROUP BY host, project_id, availability_zone, vm_state"
      metrics:
        - project_id:
            usage: "LABEL"
            description: "Project ID"
        - vm_state:
            usage: "LABEL"
            description: "State of the VM"
        - host:
            usage: "LABEL"
            description: "Host Name"
        - availability_zone:
            usage: "LABEL"
            description: "AZ Name"
        - count_gauge:
            usage: "GAUGE"
            description: "VM Count"
        - max_duration_gauge:
            usage: "GAUGE"
            description: "Maximum duration of state"

postgres:
  name: nova

logging:
    formatters:
        context:
            class: oslo_log.formatters.ContextFormatter
        default:
            format: "%(message)s"
    handlers:
        stdout:
            class: StreamHandler
            args: "(sys.stdout,)"
            formatter: context
        "null":
            class: logging.NullHandler
            args: "()"
            formatter: default
        sentry:
            class: raven.handlers.logging.SentryHandler
            level: ERROR
            args: "()"
    loggers:
        root:
            handlers: stdout, sentry
            level: WARNING
        nova:
            handlers: stdout, sentry
            level: DEBUG
        eventlet.wsgi.server:
            handlers: stdout, sentry
            level: INFO
        suds:
            handlers: "null"
            level: ERROR
